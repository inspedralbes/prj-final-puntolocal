name: Deploy to Clouding

on:
  push:
    branches: [main] 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Frontend - Nuxt
      - name: Setup Node.js para Nuxt
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Instalar dependencias Nuxt
        run: npm ci
        working-directory: ./front/nuxt

      - name: Build Nuxt
        run: npm run generate
        working-directory: ./front/nuxt
        env:
          NUXT_PUBLIC_BASE_URL: ${{ secrets.PROD_BASE_URL }} 
          NUXT_PUBLIC_API_LARAVEL_URL: ${{ secrets.PROD_API_LARAVEL_URL }} 
          NUXT_PUBLIC_NODE_URL: ${{ secrets.PROD_NODE_URL }} 

      # Backend - Laravel
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, ctype, fileinfo, openssl, PDO, mysql, tokenizer, xml
          tools: composer

      - name: Instalar dependencias Laravel
        run: |
          composer install --no-dev --optimize-autoloader
          cp .env.example .env
          
          # Variables de Base de Datos
          sed -i "s|DB_DATABASE=.*|DB_DATABASE=${{ secrets.PROD_DB_NAME }}|" .env
          sed -i "s|DB_USERNAME=.*|DB_USERNAME=${{ secrets.PROD_DB_USER }}|" .env
          sed -i "s|DB_PASSWORD=.*|DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}|" .env

          # Variables de Google OAuth
          sed -i "s|GOOGLE_CLIENT_ID=.*|GOOGLE_CLIENT_ID=${{ secrets.PROD_GOOGLE_CLIENT_ID }}|" .env
          sed -i "s|GOOGLE_CLIENT_SECRET=.*|GOOGLE_CLIENT_SECRET=${{ secrets.PROD_GOOGLE_CLIENT_SECRET }}|" .env
          sed -i "s|GOOGLE_REDIRECT_URI=.*|GOOGLE_REDIRECT_URI=${{ secrets.PROD_GOOGLE_REDIRECT_URI }}|" .env
          sed -i "s|FRONTEND_URL=.*|FRONTEND_URL=${{ secrets.PROD_BASE_URL }}|" .env
          sed -i "s|LOGIN_URL=.*|LOGIN_URL=${{ secrets.PROD_LOGIN_URL }}|" .env

          # Variables de correo
          sed -i "s|MAIL_PASSWORD=.*|MAIL_PASSWORD=${{ secrets.PROD_MAIL_PASSWORD }}|" .env

          # Variables de stripe
          sed -i "s|STRIPE_KEY=.*|STRIPE_KEY=${{ secrets.PROD_STRIPE_KEY }}|" .env
          sed -i "s|STRIPE_SECRET=.*|STRIPE_SECRET=${{ secrets.PROD_STRIPE_SECRET }}|" .env
          
          php artisan key:generate
          php artisan config:cache
        working-directory: ./back/laravel

      # Backend - Node.js
      - name: Setup Node.js para backend
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Instalar dependencias Node
        run: npm ci
        working-directory: ./back

      # Configuración SSH
      - name: Configurar acceso SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.CLOUDING_SSH_KEY }}" > ~/.ssh/clouding_key
          chmod 600 ~/.ssh/clouding_key
          echo "Host ${{ secrets.CLOUDING_HOST }}" >> ~/.ssh/config
          echo "  User ${{ secrets.CLOUDING_USER }}" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/clouding_key" >> ~/.ssh/config

      # Despliegue
      - name: Transferir archivos vía rsync
        run: |
          # Frontend
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" \
            ./front/nuxt/.output/public/ \
            ${{ secrets.CLOUDING_USER }}@${{ secrets.CLOUDING_HOST }}:/var/www/html

          # Laravel
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" \
            ./back/laravel/ \
            ${{ secrets.CLOUDING_USER }}@${{ secrets.CLOUDING_HOST }}:/var/www/backend/laravel

          # Node.js
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" \
            ./back/server.js ./back/package*.json \
            ${{ secrets.CLOUDING_USER }}@${{ secrets.CLOUDING_HOST }}:/var/www/backend

      # Configuración en el servidor
      - name: Ejecutar comandos post-despliegue
        run: |
          ssh -i ~/.ssh/clouding_key ${{ secrets.CLOUDING_USER }}@${{ secrets.CLOUDING_HOST }} "
            # Crear .env para Node.js
            echo 'NODE_ENV=production
            API_BASE_URL=${{ secrets.PROD_API_LARAVEL_URL }}
            CORS_ORIGINS=${{ secrets.PROD_BASE_URL }}
            PORT=3000' > /var/www/backend/.env
            
            # Permisos Laravel
            sudo chmod 755 /var/www
            sudo chmod 755 /var/www/backend
            sudo chmod 755 /var/www/backend/laravel
            sudo chown -R www-data:www-data /var/www/backend/laravel/storage
            sudo chown -R www-data:www-data /var/www/backend/laravel/bootstrap/cache
            sudo chmod -R 775 /var/www/backend/laravel/storage
            sudo chmod -R 775 /var/www/backend/laravel/bootstrap/cache

            cd /var/www/backend/laravel
            php artisan config:clear
            php artisan cache:clear
            php artisan route:clear

            # Instalar dependencias Node.js
            cd /var/www/backend && npm ci --production

            # Reiniciar servicios
            sudo systemctl restart php8.2
            sudo systemctl restart nginx
            pm2 delete puntolocal-node || true
            pm2 start server.js --name puntolocal-node
            pm2 save
          "
